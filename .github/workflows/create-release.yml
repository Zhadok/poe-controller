on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project 
        run: |
          mvn -B clean package
      
      # Upload release artifact (the .zip file) manually
      # https://github.com/actions/upload-release-asset/issues/47#issuecomment-659071145
      - name: Create release and upload asset
        uses: actions/github-script@v2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log("Environment", process.versions);
           
            const { repo: { owner, repo }, sha } = context;
            console.log("Context", { owner, repo, sha });
            
            console.log("tag_name", process.env.GITHUB_REF);
            
            const release = await github.repos.createRelease({
              owner, repo,
              tag_name: process.env.GITHUB_REF,
              draft: false,
              prerelease: true,
              target_commitish: sha
            });
            
            console.log("Created release", { release });
            
            const fsAsync = require("fs").promises;
            const fsSync = require("fs"); 
            
            const files = await fsAsync.readdir("./target"); 
            console.log("Found files in /target: " + files); 
            
            const zipFile = files.filter(fileName => fileName.includes(".zip"))[0]; 
            const pathToZipFile = "./target/" + zipFile; 
            console.log('Uploading file ', pathToZipFile);
            
            // Determine content-length for header to upload asset
            const contentLength = pathToZipFile => fsSync.statSync(pathToZipFile).size;
            const headers = { 'content-type': "application/zip", 'content-length': contentLength(assetPath) };
            
            // Using this example
            // https://github.com/actions/upload-release-asset/blob/main/src/upload-release-asset.js
            const uploadedReleaseAsset = await github.repos.uploadReleaseAsset({
              url: release.data.upload_url,
              headers,
              name: zipFile,
              file: fsSync.readFileSync(pathToZipFile)
            });            
            
            console.log("Uploaded release asset", { uploadedReleaseAsset }); 

